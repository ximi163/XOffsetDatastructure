// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: character.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_character_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_character_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3011000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3011000 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/map.h>  // IWYU pragma: export
#include <google/protobuf/map_entry.h>
#include <google/protobuf/map_field_inl.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_character_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_character_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[6]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_character_2eproto;
namespace protobuf_test {
class Character;
class CharacterDefaultTypeInternal;
extern CharacterDefaultTypeInternal _Character_default_instance_;
class Character_ItemsEntry_DoNotUse;
class Character_ItemsEntry_DoNotUseDefaultTypeInternal;
extern Character_ItemsEntry_DoNotUseDefaultTypeInternal _Character_ItemsEntry_DoNotUse_default_instance_;
class Equip;
class EquipDefaultTypeInternal;
extern EquipDefaultTypeInternal _Equip_default_instance_;
class Item;
class ItemDefaultTypeInternal;
extern ItemDefaultTypeInternal _Item_default_instance_;
class Position;
class PositionDefaultTypeInternal;
extern PositionDefaultTypeInternal _Position_default_instance_;
class Skill;
class SkillDefaultTypeInternal;
extern SkillDefaultTypeInternal _Skill_default_instance_;
}  // namespace protobuf_test
PROTOBUF_NAMESPACE_OPEN
template<> ::protobuf_test::Character* Arena::CreateMaybeMessage<::protobuf_test::Character>(Arena*);
template<> ::protobuf_test::Character_ItemsEntry_DoNotUse* Arena::CreateMaybeMessage<::protobuf_test::Character_ItemsEntry_DoNotUse>(Arena*);
template<> ::protobuf_test::Equip* Arena::CreateMaybeMessage<::protobuf_test::Equip>(Arena*);
template<> ::protobuf_test::Item* Arena::CreateMaybeMessage<::protobuf_test::Item>(Arena*);
template<> ::protobuf_test::Position* Arena::CreateMaybeMessage<::protobuf_test::Position>(Arena*);
template<> ::protobuf_test::Skill* Arena::CreateMaybeMessage<::protobuf_test::Skill>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace protobuf_test {

// ===================================================================

class Skill :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:protobuf_test.Skill) */ {
 public:
  Skill();
  virtual ~Skill();

  Skill(const Skill& from);
  Skill(Skill&& from) noexcept
    : Skill() {
    *this = ::std::move(from);
  }

  inline Skill& operator=(const Skill& from) {
    CopyFrom(from);
    return *this;
  }
  inline Skill& operator=(Skill&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const Skill& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Skill* internal_default_instance() {
    return reinterpret_cast<const Skill*>(
               &_Skill_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(Skill& a, Skill& b) {
    a.Swap(&b);
  }
  inline void Swap(Skill* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline Skill* New() const final {
    return CreateMaybeMessage<Skill>(nullptr);
  }

  Skill* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<Skill>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const Skill& from);
  void MergeFrom(const Skill& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Skill* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "protobuf_test.Skill";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_character_2eproto);
    return ::descriptor_table_character_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kIdFieldNumber = 1,
    kLevelFieldNumber = 2,
  };
  // uint32 id = 1;
  void clear_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 id() const;
  void set_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_id() const;
  void _internal_set_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 level = 2;
  void clear_level();
  ::PROTOBUF_NAMESPACE_ID::uint32 level() const;
  void set_level(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_level() const;
  void _internal_set_level(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:protobuf_test.Skill)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::uint32 id_;
  ::PROTOBUF_NAMESPACE_ID::uint32 level_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_character_2eproto;
};
// -------------------------------------------------------------------

class Item :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:protobuf_test.Item) */ {
 public:
  Item();
  virtual ~Item();

  Item(const Item& from);
  Item(Item&& from) noexcept
    : Item() {
    *this = ::std::move(from);
  }

  inline Item& operator=(const Item& from) {
    CopyFrom(from);
    return *this;
  }
  inline Item& operator=(Item&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const Item& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Item* internal_default_instance() {
    return reinterpret_cast<const Item*>(
               &_Item_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(Item& a, Item& b) {
    a.Swap(&b);
  }
  inline void Swap(Item* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline Item* New() const final {
    return CreateMaybeMessage<Item>(nullptr);
  }

  Item* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<Item>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const Item& from);
  void MergeFrom(const Item& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Item* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "protobuf_test.Item";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_character_2eproto);
    return ::descriptor_table_character_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kUuidFieldNumber = 2,
    kIdFieldNumber = 1,
    kNumberFieldNumber = 3,
    kTimestampFieldNumber = 4,
  };
  // uint64 uuid = 2;
  void clear_uuid();
  ::PROTOBUF_NAMESPACE_ID::uint64 uuid() const;
  void set_uuid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_uuid() const;
  void _internal_set_uuid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // uint32 id = 1;
  void clear_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 id() const;
  void set_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_id() const;
  void _internal_set_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 number = 3;
  void clear_number();
  ::PROTOBUF_NAMESPACE_ID::uint32 number() const;
  void set_number(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_number() const;
  void _internal_set_number(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint64 timestamp = 4;
  void clear_timestamp();
  ::PROTOBUF_NAMESPACE_ID::uint64 timestamp() const;
  void set_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_timestamp() const;
  void _internal_set_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // @@protoc_insertion_point(class_scope:protobuf_test.Item)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::uint64 uuid_;
  ::PROTOBUF_NAMESPACE_ID::uint32 id_;
  ::PROTOBUF_NAMESPACE_ID::uint32 number_;
  ::PROTOBUF_NAMESPACE_ID::uint64 timestamp_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_character_2eproto;
};
// -------------------------------------------------------------------

class Equip :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:protobuf_test.Equip) */ {
 public:
  Equip();
  virtual ~Equip();

  Equip(const Equip& from);
  Equip(Equip&& from) noexcept
    : Equip() {
    *this = ::std::move(from);
  }

  inline Equip& operator=(const Equip& from) {
    CopyFrom(from);
    return *this;
  }
  inline Equip& operator=(Equip&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const Equip& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Equip* internal_default_instance() {
    return reinterpret_cast<const Equip*>(
               &_Equip_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(Equip& a, Equip& b) {
    a.Swap(&b);
  }
  inline void Swap(Equip* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline Equip* New() const final {
    return CreateMaybeMessage<Equip>(nullptr);
  }

  Equip* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<Equip>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const Equip& from);
  void MergeFrom(const Equip& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Equip* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "protobuf_test.Equip";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_character_2eproto);
    return ::descriptor_table_character_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kAttributesFieldNumber = 6,
    kUuidFieldNumber = 2,
    kIdFieldNumber = 1,
    kNumberFieldNumber = 3,
    kTimestampFieldNumber = 4,
    kLevelFieldNumber = 5,
  };
  // repeated float attributes = 6;
  int attributes_size() const;
  private:
  int _internal_attributes_size() const;
  public:
  void clear_attributes();
  private:
  float _internal_attributes(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >&
      _internal_attributes() const;
  void _internal_add_attributes(float value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >*
      _internal_mutable_attributes();
  public:
  float attributes(int index) const;
  void set_attributes(int index, float value);
  void add_attributes(float value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >&
      attributes() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >*
      mutable_attributes();

  // uint64 uuid = 2;
  void clear_uuid();
  ::PROTOBUF_NAMESPACE_ID::uint64 uuid() const;
  void set_uuid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_uuid() const;
  void _internal_set_uuid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // uint32 id = 1;
  void clear_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 id() const;
  void set_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_id() const;
  void _internal_set_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 number = 3;
  void clear_number();
  ::PROTOBUF_NAMESPACE_ID::uint32 number() const;
  void set_number(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_number() const;
  void _internal_set_number(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint64 timestamp = 4;
  void clear_timestamp();
  ::PROTOBUF_NAMESPACE_ID::uint64 timestamp() const;
  void set_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_timestamp() const;
  void _internal_set_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // uint32 level = 5;
  void clear_level();
  ::PROTOBUF_NAMESPACE_ID::uint32 level() const;
  void set_level(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_level() const;
  void _internal_set_level(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:protobuf_test.Equip)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< float > attributes_;
  mutable std::atomic<int> _attributes_cached_byte_size_;
  ::PROTOBUF_NAMESPACE_ID::uint64 uuid_;
  ::PROTOBUF_NAMESPACE_ID::uint32 id_;
  ::PROTOBUF_NAMESPACE_ID::uint32 number_;
  ::PROTOBUF_NAMESPACE_ID::uint64 timestamp_;
  ::PROTOBUF_NAMESPACE_ID::uint32 level_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_character_2eproto;
};
// -------------------------------------------------------------------

class Position :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:protobuf_test.Position) */ {
 public:
  Position();
  virtual ~Position();

  Position(const Position& from);
  Position(Position&& from) noexcept
    : Position() {
    *this = ::std::move(from);
  }

  inline Position& operator=(const Position& from) {
    CopyFrom(from);
    return *this;
  }
  inline Position& operator=(Position&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const Position& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Position* internal_default_instance() {
    return reinterpret_cast<const Position*>(
               &_Position_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(Position& a, Position& b) {
    a.Swap(&b);
  }
  inline void Swap(Position* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline Position* New() const final {
    return CreateMaybeMessage<Position>(nullptr);
  }

  Position* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<Position>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const Position& from);
  void MergeFrom(const Position& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Position* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "protobuf_test.Position";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_character_2eproto);
    return ::descriptor_table_character_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kXFieldNumber = 1,
    kYFieldNumber = 2,
    kZFieldNumber = 3,
  };
  // float x = 1;
  void clear_x();
  float x() const;
  void set_x(float value);
  private:
  float _internal_x() const;
  void _internal_set_x(float value);
  public:

  // float y = 2;
  void clear_y();
  float y() const;
  void set_y(float value);
  private:
  float _internal_y() const;
  void _internal_set_y(float value);
  public:

  // float z = 3;
  void clear_z();
  float z() const;
  void set_z(float value);
  private:
  float _internal_z() const;
  void _internal_set_z(float value);
  public:

  // @@protoc_insertion_point(class_scope:protobuf_test.Position)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  float x_;
  float y_;
  float z_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_character_2eproto;
};
// -------------------------------------------------------------------

class Character_ItemsEntry_DoNotUse : public ::PROTOBUF_NAMESPACE_ID::internal::MapEntry<Character_ItemsEntry_DoNotUse, 
    ::PROTOBUF_NAMESPACE_ID::uint64, ::protobuf_test::Item,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_UINT64,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_MESSAGE,
    0 > {
public:
  typedef ::PROTOBUF_NAMESPACE_ID::internal::MapEntry<Character_ItemsEntry_DoNotUse, 
    ::PROTOBUF_NAMESPACE_ID::uint64, ::protobuf_test::Item,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_UINT64,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_MESSAGE,
    0 > SuperType;
  Character_ItemsEntry_DoNotUse();
  Character_ItemsEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void MergeFrom(const Character_ItemsEntry_DoNotUse& other);
  static const Character_ItemsEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const Character_ItemsEntry_DoNotUse*>(&_Character_ItemsEntry_DoNotUse_default_instance_); }
  static bool ValidateKey(void*) { return true; }
  static bool ValidateValue(void*) { return true; }
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& other) final;
  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_character_2eproto);
    return ::descriptor_table_character_2eproto.file_level_metadata[4];
  }

  public:
};

// -------------------------------------------------------------------

class Character :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:protobuf_test.Character) */ {
 public:
  Character();
  virtual ~Character();

  Character(const Character& from);
  Character(Character&& from) noexcept
    : Character() {
    *this = ::std::move(from);
  }

  inline Character& operator=(const Character& from) {
    CopyFrom(from);
    return *this;
  }
  inline Character& operator=(Character&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const Character& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Character* internal_default_instance() {
    return reinterpret_cast<const Character*>(
               &_Character_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  friend void swap(Character& a, Character& b) {
    a.Swap(&b);
  }
  inline void Swap(Character* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline Character* New() const final {
    return CreateMaybeMessage<Character>(nullptr);
  }

  Character* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<Character>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const Character& from);
  void MergeFrom(const Character& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Character* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "protobuf_test.Character";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_character_2eproto);
    return ::descriptor_table_character_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  enum : int {
    kPathFieldNumber = 8,
    kAttributesFieldNumber = 9,
    kItemsFieldNumber = 10,
    kEquipsFieldNumber = 11,
    kSkillsFieldNumber = 12,
    kNameFieldNumber = 2,
    kPosFieldNumber = 7,
    kIdFieldNumber = 1,
    kLevelFieldNumber = 3,
    kHealthpointFieldNumber = 4,
    kManapointFieldNumber = 5,
    kSpeedFieldNumber = 6,
  };
  // repeated .protobuf_test.Position path = 8;
  int path_size() const;
  private:
  int _internal_path_size() const;
  public:
  void clear_path();
  ::protobuf_test::Position* mutable_path(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::protobuf_test::Position >*
      mutable_path();
  private:
  const ::protobuf_test::Position& _internal_path(int index) const;
  ::protobuf_test::Position* _internal_add_path();
  public:
  const ::protobuf_test::Position& path(int index) const;
  ::protobuf_test::Position* add_path();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::protobuf_test::Position >&
      path() const;

  // repeated float attributes = 9;
  int attributes_size() const;
  private:
  int _internal_attributes_size() const;
  public:
  void clear_attributes();
  private:
  float _internal_attributes(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >&
      _internal_attributes() const;
  void _internal_add_attributes(float value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >*
      _internal_mutable_attributes();
  public:
  float attributes(int index) const;
  void set_attributes(int index, float value);
  void add_attributes(float value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >&
      attributes() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >*
      mutable_attributes();

  // map<uint64, .protobuf_test.Item> items = 10;
  int items_size() const;
  private:
  int _internal_items_size() const;
  public:
  void clear_items();
  private:
  const ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint64, ::protobuf_test::Item >&
      _internal_items() const;
  ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint64, ::protobuf_test::Item >*
      _internal_mutable_items();
  public:
  const ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint64, ::protobuf_test::Item >&
      items() const;
  ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint64, ::protobuf_test::Item >*
      mutable_items();

  // repeated .protobuf_test.Equip equips = 11;
  int equips_size() const;
  private:
  int _internal_equips_size() const;
  public:
  void clear_equips();
  ::protobuf_test::Equip* mutable_equips(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::protobuf_test::Equip >*
      mutable_equips();
  private:
  const ::protobuf_test::Equip& _internal_equips(int index) const;
  ::protobuf_test::Equip* _internal_add_equips();
  public:
  const ::protobuf_test::Equip& equips(int index) const;
  ::protobuf_test::Equip* add_equips();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::protobuf_test::Equip >&
      equips() const;

  // repeated .protobuf_test.Skill skills = 12;
  int skills_size() const;
  private:
  int _internal_skills_size() const;
  public:
  void clear_skills();
  ::protobuf_test::Skill* mutable_skills(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::protobuf_test::Skill >*
      mutable_skills();
  private:
  const ::protobuf_test::Skill& _internal_skills(int index) const;
  ::protobuf_test::Skill* _internal_add_skills();
  public:
  const ::protobuf_test::Skill& skills(int index) const;
  ::protobuf_test::Skill* add_skills();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::protobuf_test::Skill >&
      skills() const;

  // string name = 2;
  void clear_name();
  const std::string& name() const;
  void set_name(const std::string& value);
  void set_name(std::string&& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  std::string* mutable_name();
  std::string* release_name();
  void set_allocated_name(std::string* name);
  private:
  const std::string& _internal_name() const;
  void _internal_set_name(const std::string& value);
  std::string* _internal_mutable_name();
  public:

  // .protobuf_test.Position pos = 7;
  bool has_pos() const;
  private:
  bool _internal_has_pos() const;
  public:
  void clear_pos();
  const ::protobuf_test::Position& pos() const;
  ::protobuf_test::Position* release_pos();
  ::protobuf_test::Position* mutable_pos();
  void set_allocated_pos(::protobuf_test::Position* pos);
  private:
  const ::protobuf_test::Position& _internal_pos() const;
  ::protobuf_test::Position* _internal_mutable_pos();
  public:

  // uint64 id = 1;
  void clear_id();
  ::PROTOBUF_NAMESPACE_ID::uint64 id() const;
  void set_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_id() const;
  void _internal_set_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // uint32 level = 3;
  void clear_level();
  ::PROTOBUF_NAMESPACE_ID::uint32 level() const;
  void set_level(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_level() const;
  void _internal_set_level(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // float healthpoint = 4;
  void clear_healthpoint();
  float healthpoint() const;
  void set_healthpoint(float value);
  private:
  float _internal_healthpoint() const;
  void _internal_set_healthpoint(float value);
  public:

  // float manapoint = 5;
  void clear_manapoint();
  float manapoint() const;
  void set_manapoint(float value);
  private:
  float _internal_manapoint() const;
  void _internal_set_manapoint(float value);
  public:

  // float speed = 6;
  void clear_speed();
  float speed() const;
  void set_speed(float value);
  private:
  float _internal_speed() const;
  void _internal_set_speed(float value);
  public:

  // @@protoc_insertion_point(class_scope:protobuf_test.Character)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::protobuf_test::Position > path_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< float > attributes_;
  mutable std::atomic<int> _attributes_cached_byte_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::MapField<
      Character_ItemsEntry_DoNotUse,
      ::PROTOBUF_NAMESPACE_ID::uint64, ::protobuf_test::Item,
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_UINT64,
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_MESSAGE,
      0 > items_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::protobuf_test::Equip > equips_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::protobuf_test::Skill > skills_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr name_;
  ::protobuf_test::Position* pos_;
  ::PROTOBUF_NAMESPACE_ID::uint64 id_;
  ::PROTOBUF_NAMESPACE_ID::uint32 level_;
  float healthpoint_;
  float manapoint_;
  float speed_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_character_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// Skill

// uint32 id = 1;
inline void Skill::clear_id() {
  id_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 Skill::_internal_id() const {
  return id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 Skill::id() const {
  // @@protoc_insertion_point(field_get:protobuf_test.Skill.id)
  return _internal_id();
}
inline void Skill::_internal_set_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  id_ = value;
}
inline void Skill::set_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:protobuf_test.Skill.id)
}

// uint32 level = 2;
inline void Skill::clear_level() {
  level_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 Skill::_internal_level() const {
  return level_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 Skill::level() const {
  // @@protoc_insertion_point(field_get:protobuf_test.Skill.level)
  return _internal_level();
}
inline void Skill::_internal_set_level(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  level_ = value;
}
inline void Skill::set_level(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_level(value);
  // @@protoc_insertion_point(field_set:protobuf_test.Skill.level)
}

// -------------------------------------------------------------------

// Item

// uint32 id = 1;
inline void Item::clear_id() {
  id_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 Item::_internal_id() const {
  return id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 Item::id() const {
  // @@protoc_insertion_point(field_get:protobuf_test.Item.id)
  return _internal_id();
}
inline void Item::_internal_set_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  id_ = value;
}
inline void Item::set_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:protobuf_test.Item.id)
}

// uint64 uuid = 2;
inline void Item::clear_uuid() {
  uuid_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 Item::_internal_uuid() const {
  return uuid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 Item::uuid() const {
  // @@protoc_insertion_point(field_get:protobuf_test.Item.uuid)
  return _internal_uuid();
}
inline void Item::_internal_set_uuid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  uuid_ = value;
}
inline void Item::set_uuid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_uuid(value);
  // @@protoc_insertion_point(field_set:protobuf_test.Item.uuid)
}

// uint32 number = 3;
inline void Item::clear_number() {
  number_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 Item::_internal_number() const {
  return number_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 Item::number() const {
  // @@protoc_insertion_point(field_get:protobuf_test.Item.number)
  return _internal_number();
}
inline void Item::_internal_set_number(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  number_ = value;
}
inline void Item::set_number(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_number(value);
  // @@protoc_insertion_point(field_set:protobuf_test.Item.number)
}

// uint64 timestamp = 4;
inline void Item::clear_timestamp() {
  timestamp_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 Item::_internal_timestamp() const {
  return timestamp_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 Item::timestamp() const {
  // @@protoc_insertion_point(field_get:protobuf_test.Item.timestamp)
  return _internal_timestamp();
}
inline void Item::_internal_set_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  timestamp_ = value;
}
inline void Item::set_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_timestamp(value);
  // @@protoc_insertion_point(field_set:protobuf_test.Item.timestamp)
}

// -------------------------------------------------------------------

// Equip

// uint32 id = 1;
inline void Equip::clear_id() {
  id_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 Equip::_internal_id() const {
  return id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 Equip::id() const {
  // @@protoc_insertion_point(field_get:protobuf_test.Equip.id)
  return _internal_id();
}
inline void Equip::_internal_set_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  id_ = value;
}
inline void Equip::set_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:protobuf_test.Equip.id)
}

// uint64 uuid = 2;
inline void Equip::clear_uuid() {
  uuid_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 Equip::_internal_uuid() const {
  return uuid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 Equip::uuid() const {
  // @@protoc_insertion_point(field_get:protobuf_test.Equip.uuid)
  return _internal_uuid();
}
inline void Equip::_internal_set_uuid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  uuid_ = value;
}
inline void Equip::set_uuid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_uuid(value);
  // @@protoc_insertion_point(field_set:protobuf_test.Equip.uuid)
}

// uint32 number = 3;
inline void Equip::clear_number() {
  number_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 Equip::_internal_number() const {
  return number_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 Equip::number() const {
  // @@protoc_insertion_point(field_get:protobuf_test.Equip.number)
  return _internal_number();
}
inline void Equip::_internal_set_number(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  number_ = value;
}
inline void Equip::set_number(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_number(value);
  // @@protoc_insertion_point(field_set:protobuf_test.Equip.number)
}

// uint64 timestamp = 4;
inline void Equip::clear_timestamp() {
  timestamp_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 Equip::_internal_timestamp() const {
  return timestamp_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 Equip::timestamp() const {
  // @@protoc_insertion_point(field_get:protobuf_test.Equip.timestamp)
  return _internal_timestamp();
}
inline void Equip::_internal_set_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  timestamp_ = value;
}
inline void Equip::set_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_timestamp(value);
  // @@protoc_insertion_point(field_set:protobuf_test.Equip.timestamp)
}

// uint32 level = 5;
inline void Equip::clear_level() {
  level_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 Equip::_internal_level() const {
  return level_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 Equip::level() const {
  // @@protoc_insertion_point(field_get:protobuf_test.Equip.level)
  return _internal_level();
}
inline void Equip::_internal_set_level(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  level_ = value;
}
inline void Equip::set_level(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_level(value);
  // @@protoc_insertion_point(field_set:protobuf_test.Equip.level)
}

// repeated float attributes = 6;
inline int Equip::_internal_attributes_size() const {
  return attributes_.size();
}
inline int Equip::attributes_size() const {
  return _internal_attributes_size();
}
inline void Equip::clear_attributes() {
  attributes_.Clear();
}
inline float Equip::_internal_attributes(int index) const {
  return attributes_.Get(index);
}
inline float Equip::attributes(int index) const {
  // @@protoc_insertion_point(field_get:protobuf_test.Equip.attributes)
  return _internal_attributes(index);
}
inline void Equip::set_attributes(int index, float value) {
  attributes_.Set(index, value);
  // @@protoc_insertion_point(field_set:protobuf_test.Equip.attributes)
}
inline void Equip::_internal_add_attributes(float value) {
  attributes_.Add(value);
}
inline void Equip::add_attributes(float value) {
  _internal_add_attributes(value);
  // @@protoc_insertion_point(field_add:protobuf_test.Equip.attributes)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >&
Equip::_internal_attributes() const {
  return attributes_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >&
Equip::attributes() const {
  // @@protoc_insertion_point(field_list:protobuf_test.Equip.attributes)
  return _internal_attributes();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >*
Equip::_internal_mutable_attributes() {
  return &attributes_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >*
Equip::mutable_attributes() {
  // @@protoc_insertion_point(field_mutable_list:protobuf_test.Equip.attributes)
  return _internal_mutable_attributes();
}

// -------------------------------------------------------------------

// Position

// float x = 1;
inline void Position::clear_x() {
  x_ = 0;
}
inline float Position::_internal_x() const {
  return x_;
}
inline float Position::x() const {
  // @@protoc_insertion_point(field_get:protobuf_test.Position.x)
  return _internal_x();
}
inline void Position::_internal_set_x(float value) {
  
  x_ = value;
}
inline void Position::set_x(float value) {
  _internal_set_x(value);
  // @@protoc_insertion_point(field_set:protobuf_test.Position.x)
}

// float y = 2;
inline void Position::clear_y() {
  y_ = 0;
}
inline float Position::_internal_y() const {
  return y_;
}
inline float Position::y() const {
  // @@protoc_insertion_point(field_get:protobuf_test.Position.y)
  return _internal_y();
}
inline void Position::_internal_set_y(float value) {
  
  y_ = value;
}
inline void Position::set_y(float value) {
  _internal_set_y(value);
  // @@protoc_insertion_point(field_set:protobuf_test.Position.y)
}

// float z = 3;
inline void Position::clear_z() {
  z_ = 0;
}
inline float Position::_internal_z() const {
  return z_;
}
inline float Position::z() const {
  // @@protoc_insertion_point(field_get:protobuf_test.Position.z)
  return _internal_z();
}
inline void Position::_internal_set_z(float value) {
  
  z_ = value;
}
inline void Position::set_z(float value) {
  _internal_set_z(value);
  // @@protoc_insertion_point(field_set:protobuf_test.Position.z)
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// Character

// uint64 id = 1;
inline void Character::clear_id() {
  id_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 Character::_internal_id() const {
  return id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 Character::id() const {
  // @@protoc_insertion_point(field_get:protobuf_test.Character.id)
  return _internal_id();
}
inline void Character::_internal_set_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  id_ = value;
}
inline void Character::set_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:protobuf_test.Character.id)
}

// string name = 2;
inline void Character::clear_name() {
  name_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& Character::name() const {
  // @@protoc_insertion_point(field_get:protobuf_test.Character.name)
  return _internal_name();
}
inline void Character::set_name(const std::string& value) {
  _internal_set_name(value);
  // @@protoc_insertion_point(field_set:protobuf_test.Character.name)
}
inline std::string* Character::mutable_name() {
  // @@protoc_insertion_point(field_mutable:protobuf_test.Character.name)
  return _internal_mutable_name();
}
inline const std::string& Character::_internal_name() const {
  return name_.GetNoArena();
}
inline void Character::_internal_set_name(const std::string& value) {
  
  name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void Character::set_name(std::string&& value) {
  
  name_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:protobuf_test.Character.name)
}
inline void Character::set_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protobuf_test.Character.name)
}
inline void Character::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protobuf_test.Character.name)
}
inline std::string* Character::_internal_mutable_name() {
  
  return name_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* Character::release_name() {
  // @@protoc_insertion_point(field_release:protobuf_test.Character.name)
  
  return name_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void Character::set_allocated_name(std::string* name) {
  if (name != nullptr) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:protobuf_test.Character.name)
}

// uint32 level = 3;
inline void Character::clear_level() {
  level_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 Character::_internal_level() const {
  return level_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 Character::level() const {
  // @@protoc_insertion_point(field_get:protobuf_test.Character.level)
  return _internal_level();
}
inline void Character::_internal_set_level(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  level_ = value;
}
inline void Character::set_level(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_level(value);
  // @@protoc_insertion_point(field_set:protobuf_test.Character.level)
}

// float healthpoint = 4;
inline void Character::clear_healthpoint() {
  healthpoint_ = 0;
}
inline float Character::_internal_healthpoint() const {
  return healthpoint_;
}
inline float Character::healthpoint() const {
  // @@protoc_insertion_point(field_get:protobuf_test.Character.healthpoint)
  return _internal_healthpoint();
}
inline void Character::_internal_set_healthpoint(float value) {
  
  healthpoint_ = value;
}
inline void Character::set_healthpoint(float value) {
  _internal_set_healthpoint(value);
  // @@protoc_insertion_point(field_set:protobuf_test.Character.healthpoint)
}

// float manapoint = 5;
inline void Character::clear_manapoint() {
  manapoint_ = 0;
}
inline float Character::_internal_manapoint() const {
  return manapoint_;
}
inline float Character::manapoint() const {
  // @@protoc_insertion_point(field_get:protobuf_test.Character.manapoint)
  return _internal_manapoint();
}
inline void Character::_internal_set_manapoint(float value) {
  
  manapoint_ = value;
}
inline void Character::set_manapoint(float value) {
  _internal_set_manapoint(value);
  // @@protoc_insertion_point(field_set:protobuf_test.Character.manapoint)
}

// float speed = 6;
inline void Character::clear_speed() {
  speed_ = 0;
}
inline float Character::_internal_speed() const {
  return speed_;
}
inline float Character::speed() const {
  // @@protoc_insertion_point(field_get:protobuf_test.Character.speed)
  return _internal_speed();
}
inline void Character::_internal_set_speed(float value) {
  
  speed_ = value;
}
inline void Character::set_speed(float value) {
  _internal_set_speed(value);
  // @@protoc_insertion_point(field_set:protobuf_test.Character.speed)
}

// .protobuf_test.Position pos = 7;
inline bool Character::_internal_has_pos() const {
  return this != internal_default_instance() && pos_ != nullptr;
}
inline bool Character::has_pos() const {
  return _internal_has_pos();
}
inline void Character::clear_pos() {
  if (GetArenaNoVirtual() == nullptr && pos_ != nullptr) {
    delete pos_;
  }
  pos_ = nullptr;
}
inline const ::protobuf_test::Position& Character::_internal_pos() const {
  const ::protobuf_test::Position* p = pos_;
  return p != nullptr ? *p : *reinterpret_cast<const ::protobuf_test::Position*>(
      &::protobuf_test::_Position_default_instance_);
}
inline const ::protobuf_test::Position& Character::pos() const {
  // @@protoc_insertion_point(field_get:protobuf_test.Character.pos)
  return _internal_pos();
}
inline ::protobuf_test::Position* Character::release_pos() {
  // @@protoc_insertion_point(field_release:protobuf_test.Character.pos)
  
  ::protobuf_test::Position* temp = pos_;
  pos_ = nullptr;
  return temp;
}
inline ::protobuf_test::Position* Character::_internal_mutable_pos() {
  
  if (pos_ == nullptr) {
    auto* p = CreateMaybeMessage<::protobuf_test::Position>(GetArenaNoVirtual());
    pos_ = p;
  }
  return pos_;
}
inline ::protobuf_test::Position* Character::mutable_pos() {
  // @@protoc_insertion_point(field_mutable:protobuf_test.Character.pos)
  return _internal_mutable_pos();
}
inline void Character::set_allocated_pos(::protobuf_test::Position* pos) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete pos_;
  }
  if (pos) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      pos = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, pos, submessage_arena);
    }
    
  } else {
    
  }
  pos_ = pos;
  // @@protoc_insertion_point(field_set_allocated:protobuf_test.Character.pos)
}

// repeated .protobuf_test.Position path = 8;
inline int Character::_internal_path_size() const {
  return path_.size();
}
inline int Character::path_size() const {
  return _internal_path_size();
}
inline void Character::clear_path() {
  path_.Clear();
}
inline ::protobuf_test::Position* Character::mutable_path(int index) {
  // @@protoc_insertion_point(field_mutable:protobuf_test.Character.path)
  return path_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::protobuf_test::Position >*
Character::mutable_path() {
  // @@protoc_insertion_point(field_mutable_list:protobuf_test.Character.path)
  return &path_;
}
inline const ::protobuf_test::Position& Character::_internal_path(int index) const {
  return path_.Get(index);
}
inline const ::protobuf_test::Position& Character::path(int index) const {
  // @@protoc_insertion_point(field_get:protobuf_test.Character.path)
  return _internal_path(index);
}
inline ::protobuf_test::Position* Character::_internal_add_path() {
  return path_.Add();
}
inline ::protobuf_test::Position* Character::add_path() {
  // @@protoc_insertion_point(field_add:protobuf_test.Character.path)
  return _internal_add_path();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::protobuf_test::Position >&
Character::path() const {
  // @@protoc_insertion_point(field_list:protobuf_test.Character.path)
  return path_;
}

// repeated float attributes = 9;
inline int Character::_internal_attributes_size() const {
  return attributes_.size();
}
inline int Character::attributes_size() const {
  return _internal_attributes_size();
}
inline void Character::clear_attributes() {
  attributes_.Clear();
}
inline float Character::_internal_attributes(int index) const {
  return attributes_.Get(index);
}
inline float Character::attributes(int index) const {
  // @@protoc_insertion_point(field_get:protobuf_test.Character.attributes)
  return _internal_attributes(index);
}
inline void Character::set_attributes(int index, float value) {
  attributes_.Set(index, value);
  // @@protoc_insertion_point(field_set:protobuf_test.Character.attributes)
}
inline void Character::_internal_add_attributes(float value) {
  attributes_.Add(value);
}
inline void Character::add_attributes(float value) {
  _internal_add_attributes(value);
  // @@protoc_insertion_point(field_add:protobuf_test.Character.attributes)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >&
Character::_internal_attributes() const {
  return attributes_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >&
Character::attributes() const {
  // @@protoc_insertion_point(field_list:protobuf_test.Character.attributes)
  return _internal_attributes();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >*
Character::_internal_mutable_attributes() {
  return &attributes_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >*
Character::mutable_attributes() {
  // @@protoc_insertion_point(field_mutable_list:protobuf_test.Character.attributes)
  return _internal_mutable_attributes();
}

// map<uint64, .protobuf_test.Item> items = 10;
inline int Character::_internal_items_size() const {
  return items_.size();
}
inline int Character::items_size() const {
  return _internal_items_size();
}
inline void Character::clear_items() {
  items_.Clear();
}
inline const ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint64, ::protobuf_test::Item >&
Character::_internal_items() const {
  return items_.GetMap();
}
inline const ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint64, ::protobuf_test::Item >&
Character::items() const {
  // @@protoc_insertion_point(field_map:protobuf_test.Character.items)
  return _internal_items();
}
inline ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint64, ::protobuf_test::Item >*
Character::_internal_mutable_items() {
  return items_.MutableMap();
}
inline ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint64, ::protobuf_test::Item >*
Character::mutable_items() {
  // @@protoc_insertion_point(field_mutable_map:protobuf_test.Character.items)
  return _internal_mutable_items();
}

// repeated .protobuf_test.Equip equips = 11;
inline int Character::_internal_equips_size() const {
  return equips_.size();
}
inline int Character::equips_size() const {
  return _internal_equips_size();
}
inline void Character::clear_equips() {
  equips_.Clear();
}
inline ::protobuf_test::Equip* Character::mutable_equips(int index) {
  // @@protoc_insertion_point(field_mutable:protobuf_test.Character.equips)
  return equips_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::protobuf_test::Equip >*
Character::mutable_equips() {
  // @@protoc_insertion_point(field_mutable_list:protobuf_test.Character.equips)
  return &equips_;
}
inline const ::protobuf_test::Equip& Character::_internal_equips(int index) const {
  return equips_.Get(index);
}
inline const ::protobuf_test::Equip& Character::equips(int index) const {
  // @@protoc_insertion_point(field_get:protobuf_test.Character.equips)
  return _internal_equips(index);
}
inline ::protobuf_test::Equip* Character::_internal_add_equips() {
  return equips_.Add();
}
inline ::protobuf_test::Equip* Character::add_equips() {
  // @@protoc_insertion_point(field_add:protobuf_test.Character.equips)
  return _internal_add_equips();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::protobuf_test::Equip >&
Character::equips() const {
  // @@protoc_insertion_point(field_list:protobuf_test.Character.equips)
  return equips_;
}

// repeated .protobuf_test.Skill skills = 12;
inline int Character::_internal_skills_size() const {
  return skills_.size();
}
inline int Character::skills_size() const {
  return _internal_skills_size();
}
inline void Character::clear_skills() {
  skills_.Clear();
}
inline ::protobuf_test::Skill* Character::mutable_skills(int index) {
  // @@protoc_insertion_point(field_mutable:protobuf_test.Character.skills)
  return skills_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::protobuf_test::Skill >*
Character::mutable_skills() {
  // @@protoc_insertion_point(field_mutable_list:protobuf_test.Character.skills)
  return &skills_;
}
inline const ::protobuf_test::Skill& Character::_internal_skills(int index) const {
  return skills_.Get(index);
}
inline const ::protobuf_test::Skill& Character::skills(int index) const {
  // @@protoc_insertion_point(field_get:protobuf_test.Character.skills)
  return _internal_skills(index);
}
inline ::protobuf_test::Skill* Character::_internal_add_skills() {
  return skills_.Add();
}
inline ::protobuf_test::Skill* Character::add_skills() {
  // @@protoc_insertion_point(field_add:protobuf_test.Character.skills)
  return _internal_add_skills();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::protobuf_test::Skill >&
Character::skills() const {
  // @@protoc_insertion_point(field_list:protobuf_test.Character.skills)
  return skills_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace protobuf_test

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_character_2eproto
